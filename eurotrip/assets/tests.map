{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","europe-trip-blog/tests/app.lint-test.js","europe-trip-blog/tests/helpers/destroy-app.js","europe-trip-blog/tests/helpers/module-for-acceptance.js","europe-trip-blog/tests/helpers/resolver.js","europe-trip-blog/tests/helpers/start-app.js","europe-trip-blog/tests/integration/components/map-view-test.js","europe-trip-blog/tests/integration/components/photo-display-test.js","europe-trip-blog/tests/integration/components/photo-inspector-test.js","europe-trip-blog/tests/integration/components/photos-list-test.js","europe-trip-blog/tests/integration/components/stories-list-test.js","europe-trip-blog/tests/test-helper.js","europe-trip-blog/tests/tests.lint-test.js","europe-trip-blog/tests/unit/routes/photos-test.js","europe-trip-blog/tests/unit/routes/stories-test.js","europe-trip-blog/tests/unit/routes/story-test.js","europe-trip-blog/tests/unit/services/story-manager-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('europe-trip-blog/tests/app.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/map-view.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/map-view.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/photo-display.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/photo-display.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/photo-inspector.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/photo-inspector.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/photos-list.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/photos-list.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/stories-list.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/stories-list.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/photo.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/photo.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/story.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/story.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/photos.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/photos.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/stories.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/stories.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/story.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/story.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/story-manager.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/story-manager.js should pass ESLint\\n\\n');\n  });\n});","define('europe-trip-blog/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('europe-trip-blog/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'europe-trip-blog/tests/helpers/start-app', 'europe-trip-blog/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _europeTripBlogTestsHelpersStartApp, _europeTripBlogTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _europeTripBlogTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _europeTripBlogTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('europe-trip-blog/tests/helpers/resolver', ['exports', 'europe-trip-blog/resolver', 'europe-trip-blog/config/environment'], function (exports, _europeTripBlogResolver, _europeTripBlogConfigEnvironment) {\n\n  var resolver = _europeTripBlogResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _europeTripBlogConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _europeTripBlogConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('europe-trip-blog/tests/helpers/start-app', ['exports', 'ember', 'europe-trip-blog/app', 'europe-trip-blog/config/environment'], function (exports, _ember, _europeTripBlogApp, _europeTripBlogConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var attributes = _ember['default'].merge({}, _europeTripBlogConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    return _ember['default'].run(function () {\n      var application = _europeTripBlogApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('europe-trip-blog/tests/integration/components/map-view-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('map-view', 'Integration | Component | map view', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'rkLtg0+i',\n      'block': '{\"statements\":[[1,[26,[\"map-view\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'E/azckoP',\n      'block': '{\"statements\":[[0,\"\\\\n\"],[6,[\"map-view\"],null,null,{\"statements\":[[0,\"      template block text\\\\n\"]],\"locals\":[]},null],[0,\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('europe-trip-blog/tests/integration/components/photo-display-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('photo-display', 'Integration | Component | photo display', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'q9pRdSSE',\n      'block': '{\"statements\":[[1,[26,[\"photo-display\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '1TbgL9DB',\n      'block': '{\"statements\":[[0,\"\\\\n\"],[6,[\"photo-display\"],null,null,{\"statements\":[[0,\"      template block text\\\\n\"]],\"locals\":[]},null],[0,\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('europe-trip-blog/tests/integration/components/photo-inspector-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('photo-inspector', 'Integration | Component | photo inspector', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'tryIucV0',\n      'block': '{\"statements\":[[1,[26,[\"photo-inspector\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'MO2+MkxQ',\n      'block': '{\"statements\":[[0,\"\\\\n\"],[6,[\"photo-inspector\"],null,null,{\"statements\":[[0,\"      template block text\\\\n\"]],\"locals\":[]},null],[0,\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('europe-trip-blog/tests/integration/components/photos-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('photos-list', 'Integration | Component | photos list', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'zy+iZuaK',\n      'block': '{\"statements\":[[1,[26,[\"photos-list\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'mfcpcOzc',\n      'block': '{\"statements\":[[0,\"\\\\n\"],[6,[\"photos-list\"],null,null,{\"statements\":[[0,\"      template block text\\\\n\"]],\"locals\":[]},null],[0,\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('europe-trip-blog/tests/integration/components/stories-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('stories-list', 'Integration | Component | stories list', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'FQZb+US6',\n      'block': '{\"statements\":[[1,[26,[\"stories-list\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'db4qcutx',\n      'block': '{\"statements\":[[0,\"\\\\n\"],[6,[\"stories-list\"],null,null,{\"statements\":[[0,\"      template block text\\\\n\"]],\"locals\":[]},null],[0,\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('europe-trip-blog/tests/test-helper', ['exports', 'europe-trip-blog/tests/helpers/resolver', 'ember-qunit'], function (exports, _europeTripBlogTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_europeTripBlogTestsHelpersResolver['default']);\n});","define('europe-trip-blog/tests/tests.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/map-view-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/map-view-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/photo-display-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'integration/components/photo-display-test.js should pass ESLint\\n\\n1:55 - Extra semicolon. (semi)\\n2:45 - Extra semicolon. (semi)\\n6:3 - Extra semicolon. (semi)\\n13:38 - Extra semicolon. (semi)\\n15:43 - Extra semicolon. (semi)\\n22:5 - Extra semicolon. (semi)\\n24:62 - Extra semicolon. (semi)\\n25:3 - Extra semicolon. (semi)');\n  });\n\n  QUnit.test('integration/components/photo-inspector-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'integration/components/photo-inspector-test.js should pass ESLint\\n\\n1:55 - Extra semicolon. (semi)\\n2:45 - Extra semicolon. (semi)\\n6:3 - Extra semicolon. (semi)\\n13:40 - Extra semicolon. (semi)\\n15:43 - Extra semicolon. (semi)\\n22:5 - Extra semicolon. (semi)\\n24:62 - Extra semicolon. (semi)\\n25:3 - Extra semicolon. (semi)');\n  });\n\n  QUnit.test('integration/components/photos-list-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'integration/components/photos-list-test.js should pass ESLint\\n\\n1:55 - Extra semicolon. (semi)\\n2:45 - Extra semicolon. (semi)\\n6:3 - Extra semicolon. (semi)\\n13:36 - Extra semicolon. (semi)\\n15:43 - Extra semicolon. (semi)\\n22:5 - Extra semicolon. (semi)\\n24:62 - Extra semicolon. (semi)\\n25:3 - Extra semicolon. (semi)');\n  });\n\n  QUnit.test('integration/components/stories-list-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/stories-list-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/photos-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/photos-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/stories-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/stories-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/story-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/story-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/story-manager-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/story-manager-test.js should pass ESLint\\n\\n');\n  });\n});","define('europe-trip-blog/tests/unit/routes/photos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:photos', 'Unit | Route | photos', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('europe-trip-blog/tests/unit/routes/stories-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:stories', 'Unit | Route | stories', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('europe-trip-blog/tests/unit/routes/story-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:story', 'Unit | Route | story', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('europe-trip-blog/tests/unit/services/story-manager-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:story-manager', 'Unit | Service | story manager', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","require('europe-trip-blog/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;","file":"tests.js"}